id: uptrace.redis.nodes_by_cluster_node
name: 'Redis: Nodes'

metrics:
  - node_available_memory as $mem_available
  - node_conns as $conns
  - node_total_req as $req
  - node_ingress_bytes as $ingress
  - node_egress_bytes as $egress
query:
  - group by cluster
  - group by node
  - $mem_available
  - $conns
  - $req
  - $ingress
  - $egress
columns:
  mem_available: { unit: bytes }
  ingress: { unit: bytes }
  egress: { unit: bytes }

entries:
  - name: Available memory
    metrics:
      - redis_used_memory as $used_mem
      - node_available_memory as $available_mem
      - node_provisional_memory as $provis_mem
      - node_provisional_memory_no_overbooking as $provis_mem_no_overbooking
    query:
      - $used_mem
      - $available_mem
      - $provis_mem
      - $provis_mem_no_overbooking
    columns:
      used_mem: { unit: bytes }
      available_mem: { unit: bytes }
      provis_mem: { unit: bytes }
      provis_mem_no_overbooking: { unit: bytes }

  # listener_total_req
  # listener_egress_bytes

  - name: CPU usage
    metrics:
      - node_cpu_idle as $cpu_idle
    query:
      - 1 - $cpu_idle as cpu_usage
    columns:
      cpu_usage: { unit: bytes }

  - name: Number of connections
    metrics:
      - node_conns as $conns
    query:
      - $conns

  - name: Number of requests
    metrics:
      - node_total_req as $req
    query:
      - $req

  - name: Ingress bytes
    metrics:
      - node_ingress_bytes as $ingress
    query:
      - $ingress
    columns:
      ingress: { unit: bytes }

  - name: Egress bytes
    metrics:
      - node_egress_bytes as $egress
    query:
      - $egress
    columns:
      egress: { unit: bytes }

---
id: uptrace.redis.nodes_by_cluster_bdb
name: 'Redis: Databases'

metrics:
  - bdb_used_memory as $mem_used
  - bdb_conns as $conns
  - bdb_total_req as $req
  - bdb_ingress_bytes as $ingress
  - bdb_egress_bytes as $egress
query:
  - group by cluster
  - group by bdb
  - $mem_used
  - $conns
  - $req
  - $ingress
  - $egress
columns:
  mem_used: { unit: bytes }
  ingress: { unit: bytes }
  egress: { unit: bytes }

entries:
  - name: Used memory
    metrics:
      - bdb_used_memory as $mem_used
    query:
      - $mem_used
    columns:
      mem_used: { unit: bytes }

  - name: Number of connections
    metrics:
      - bdb_conns as $conns
    query:
      - $conns

  - name: Number of requests
    metrics:
      - bdb_total_req as $req
    query:
      - $req

  - name: Ingress bytes
    metrics:
      - bdb_ingress_bytes as $ingress
    query:
      - $ingress
    columns:
      ingress: { unit: bytes }

  - name: Egress bytes
    metrics:
      - bdb_egress_bytes as $egress
    query:
      - $egress
    columns:
      egress: { unit: bytes }

---
id: uptrace.redis.shards_by_cluster_bdb_node
name: 'Redis: Shards'

metrics:
  - redis_used_memory as $mem_used
  - redis_mem_fragmentation_ratio as $mem_frag
  - redis_connected_clients as $clients
  - redis_evicted_keys as $evicted_keys
query:
  - group by cluster
  - group by bdb
  - group by node
  - $mem_used
  - $clients
  - $evicted_keys
  - $mem_frag
columns:
  mem_used: { unit: bytes }
  mem_frag: { unit: percents }

entries:
  - name: Used memory
    metrics:
      - redis_used_memory as $mem_used
    query:
      - $mem_used
    columns:
      mem_used: { unit: bytes }

  - name: Keyspace read hits and misses
    metrics:
      - redis_keyspace_read_hits as $hits
      - redis_keyspace_read_misses as $misses
    query:
      - $hits
      - $misses
      - $hits / ($hits + $misses) as hit_rate
    columns:
      hit_rate: { unit: percents }

  - name: DB Keys
    metrics:
      - redis_db_keys as $db_keys
    query:
      - $db_keys

  - name: RSS memory
    metrics:
      - redis_used_memory_rss as $rss
    query:
      - $rss
    columns:
      rss: { unit: bytes }

  - name: Total number of processed commands
    metrics:
      - redis_total_commands_processed as $cmds
    query:
      - $cmds
